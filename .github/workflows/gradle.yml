# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & React & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test

    - name: DockerHub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # Docker 이미지 빌드 및 DockerHub Push (React 앱)
    - name: Docker Image Build and Push (React app)
      run: |
        cd src/main/reactfront
        docker build -t ${{ secrets.DOCKER_USERNAME }}/react-docker .
        docker push ${{ secrets.DOCKER_USERNAME }}/react-docker

    # Docker 이미지 빌드 및 DockerHub Push (Spring Boot 앱)
    - name: Docker Image Build and Push (Spring Boot app)
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-docker -f src/main/java/Dockerfile .
        docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-docker
        
    # EC2 인스턴스 접속 및 애플리케이션 실행
    - name: Application Run
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}

        script: |
          sudo docker-compose down

          cd
          docker-compose up -d
          sudo service nginx restart
          
